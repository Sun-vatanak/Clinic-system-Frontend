{
  "version": 3,
  "sources": ["../../tom-select/src/utils.ts"],
  "sourcesContent": ["\nimport type TomSelect from './tom-select.ts';\nimport { TomLoadCallback } from './types/index.ts';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * use setTimeout if timeout > 0 \n */\nexport const timeout = (fn:()=>void,timeout:number): number | null => {\n\tif( timeout > 0 ){\n\t\treturn window.setTimeout(fn,timeout);\n\t}\n\n\tfn.call(null);\n\treturn null;\n}\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n"],
  "mappings": "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",
  "names": ["timeout", "type"]
}
